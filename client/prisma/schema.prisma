generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customer {
  id               BigInt        @id @default(autoincrement())
  customer_type_id BigInt
  first_name       String
  last_name        String
  street_address   String?
  city             String?
  zipcode          String?
  phone_number     String?
  email            String
  updated_at       DateTime?     @db.Timestamp(6)
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  company_name     String?
  state            String?
  customer_type    customer_type @relation(fields: [customer_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estimate         estimate[]
  invoice          invoice[]
  job              job[]
  quote            quote[]
}

model customer_type {
  id            BigInt          @id @default(autoincrement())
  name          String
  description   String
  updated_at    DateTime?       @db.Timestamp(6)
  created_at    DateTime?       @default(now()) @db.Timestamptz(6)
  customer      customer[]
  quote_request quote_request[]
}

model estimate {
  id                    BigInt                  @id @default(autoincrement())
  estimate_number       BigInt                  @unique
  customer_id           BigInt
  service_type_id       BigInt
  est_status_id         BigInt
  estimate_date         DateTime                @db.Date
  issued_date           DateTime?               @db.Date
  expiration_date       DateTime                @db.Date
  subtotal              Float?
  total                 Float?
  sales_tax             Float?
  updated_at            DateTime?               @db.Timestamp(6)
  created_at            DateTime?               @default(now()) @db.Timestamptz(6)
  note                  String?
  customer              customer                @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estimate_status       estimate_status         @relation(fields: [est_status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  services              services                @relation(fields: [service_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estimate_line_service estimate_line_service[]
  job                   job[]
}

model estimate_line_service {
  id          BigInt    @id @default(autoincrement())
  estimate_id BigInt
  service_id  BigInt
  sq_ft       Float?
  qty         BigInt
  rate        Float
  amount      Float
  updated_at  DateTime? @db.Timestamp(6)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  estimate    estimate  @relation(fields: [estimate_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  service     service   @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model estimate_request_status {
  id            BigInt          @id @default(autoincrement())
  name          String
  description   String
  updated_at    DateTime?       @db.Timestamp(6)
  created_at    DateTime?       @default(now()) @db.Timestamptz(6)
  quote_request quote_request[]
}

model estimate_status {
  id          BigInt     @id @default(autoincrement())
  name        String?
  description String?
  updated_at  DateTime?  @db.Timestamp(6)
  created_at  DateTime?  @default(now()) @db.Timestamptz(6)
  estimate    estimate[]
  quote       quote[]
}

model invoice {
  id                       BigInt                 @id @default(autoincrement())
  invoice_number           BigInt                 @unique
  customer_id              BigInt
  service_type_id          BigInt?
  invoice_status_id        BigInt?
  invoice_date             DateTime?              @db.Date
  issue_date               DateTime?              @db.Date
  due_date                 DateTime?              @db.Date
  subtotal                 Float?
  total                    Float?
  sales_tax                Float?                 @db.Real
  sqft_measurement         String?
  note                     String?
  updated_at               DateTime?              @db.Timestamp(6)
  created_at               DateTime?              @default(now()) @db.Timestamptz(6)
  bill_from_street_address String?                @default("150 Tallant St")
  bill_from_city           String?                @default("Houston")
  bill_from_zipcode        String?                @default("77076")
  bill_from_country        String?                @default("United States")
  bill_to_street_address   String?
  bill_to_city             String?
  bill_to_state            String?
  bill_to_zipcode          String?
  customer                 customer               @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invoice_status           invoice_status?        @relation(fields: [invoice_status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  services                 services?              @relation(fields: [service_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invoice_line_service     invoice_line_service[]
  payment                  payment[]
}

model invoice_line_service {
  id         BigInt    @id(map: "invoice_line_service_duplicate_pkey") @default(autoincrement())
  invoice_id BigInt
  service_id BigInt
  sq_ft      Float?
  qty        BigInt
  rate       Float
  amount     Float
  updated_at DateTime? @db.Timestamp(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  invoice    invoice   @relation(fields: [invoice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  service    service   @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model invoice_status {
  id          BigInt    @id @default(autoincrement())
  name        String?
  description String?
  updated_at  DateTime? @db.Timestamp(6)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  invoice     invoice[]
}

model job {
  id                  BigInt        @id @default(autoincrement())
  customer_id         BigInt
  est_id              BigInt?
  inv_id              BigInt?
  job_status_id       BigInt
  start_date          DateTime?     @db.Date
  end_date            DateTime?     @db.Date
  updated_at          DateTime?     @db.Timestamp(6)
  created_at          DateTime?     @default(now()) @db.Timestamptz(6)
  estimate_request_id BigInt
  customer            customer      @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estimate            estimate?     @relation(fields: [est_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  quote_request       quote_request @relation(fields: [estimate_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model job_status {
  id          BigInt    @id @default(autoincrement())
  name        String
  description String
  updated_at  DateTime? @db.Timestamp(6)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
}

model payment {
  id             BigInt    @id @default(autoincrement())
  invoice_id     BigInt?
  payment_method String?
  amount         Float?
  updated_at     DateTime? @db.Timestamp(6)
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  date_received  DateTime? @db.Date
  invoice        invoice?  @relation(fields: [invoice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model quote {
  id              BigInt           @id @default(autoincrement())
  quote_number    BigInt           @unique
  customer_id     BigInt?
  status_id       BigInt?
  date_issued     DateTime?        @db.Date
  expiration_date DateTime?        @db.Date
  created_at      DateTime?        @default(now()) @db.Timestamptz(6)
  customer        customer?        @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estimate_status estimate_status? @relation(fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  quote_item      quote_item[]
}

model quote_item {
  id          BigInt    @id @default(autoincrement())
  quote_id    BigInt?
  service_id  BigInt?
  measurement BigInt?
  quantity    BigInt?
  price       Float?
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  quote       quote?    @relation(fields: [quote_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  service     service?  @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model quote_request {
  id                      BigInt                  @id(map: "estimate_request_pkey") @unique(map: "estimate_request_id_key") @default(autoincrement())
  created_at              DateTime?               @default(now()) @db.Timestamptz(6)
  service_type_id         BigInt?
  customer_typeID         BigInt
  firstName               String?
  lastName                String?
  streetAddress           String?
  city                    String?
  zipcode                 String?
  email                   String
  custom_service          String?
  requested_date          DateTime?               @db.Date
  est_request_status_id   BigInt                  @default(1)
  state                   String?
  phone_number            String?
  updated_at              DateTime?               @db.Timestamptz(6)
  job                     job[]
  customer_type           customer_type           @relation(fields: [customer_typeID], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estimate_request_status estimate_request_status @relation(fields: [est_request_status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  services                services?               @relation(fields: [service_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model service {
  id                    BigInt                  @id @default(autoincrement())
  name                  String
  description           String
  updated_at            DateTime?               @db.Time(6)
  created_at            DateTime?               @default(now()) @db.Timestamptz(6)
  default_price         String?
  estimate_line_service estimate_line_service[]
  invoice_line_service  invoice_line_service[]
  quote_item            quote_item[]
}

model services {
  id            BigInt          @id(map: "service_type_pkey") @default(autoincrement())
  name          String
  description   String
  updated_at    DateTime?       @db.Timestamp(6)
  created_at    DateTime?       @default(now()) @db.Timestamptz(6)
  default_price String?
  estimate      estimate[]
  invoice       invoice[]
  quote_request quote_request[]
}
